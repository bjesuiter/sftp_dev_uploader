name: Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          # Works
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            artifact_name: dev_uploader-linux_x64
            build_artifact_name: dev_uploader
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: dev_uploader-mac_arm64
            build_artifact_name: dev_uploader
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: dev_uploader-windows_x64.exe
            build_artifact_name: dev_uploader.exe
          # Not tested yet, also not needed for now
          # - os: windows-latest
          #   target: aarch64-pc-windows-msvc
          #   artifact_name: dev_uploader-windows-arm64.exe
          # TODO: fix these - maybe with github arm and macos runners
          # aka: runs-on: "ubuntu-22.04-arm" or "macos-15"
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu
          #   artifact_name: dev_uploader-linux-arm64
    env:
      target_path: target/${{ matrix.target }}/release/dev_uploader

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.85.1
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: cargo build --release --bin dev_uploader --target ${{ matrix.target }}
        env:
          # can probably be more specific later, like -A unused_imports
          RUSTFLAGS: -A warnings

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.build_artifact_name }}

  # release:
  #   name: Create Release
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Download all artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: artifacts
  #         pattern: dev_uploader-*

  #     - name: Create Release
  #       id: create_release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         draft: true
  #         prerelease: false
  #         files: |
  #           artifacts/dev_uploader-*
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
